% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knitting.R
\name{plot_hook_textpos}
\alias{plot_hook_textpos}
\title{Plot placement and resizing hook}
\usage{
plot_hook_textpos(x, options)
}
\description{
Not called directly but automatically set as knitr's plot hook, so that
chunks with plots can process the chunk options \code{textblock_width} and
\code{inside_textblock}, which allow you to use the \code{textpos} grid for
placing and sizing plots on slides arbitrarily instead of in the flow of
text.
}
\details{
This gives us some new options and changes the meaning of two others:

\describe{

\item{\code{out.width, out.height}}{reinterpreted as units on the textpos
grid. This sets the scaling by pdflatex of an image file whose generated
dimensions are set by \code{fig.width} and \code{fig.height} (which are
always in inches).}

\item{\code{textblock_width}}{width of the block in \code{textpos} grid
units}

\item{\code{textblock_pos}}{two-element vector of grid coordinates of the
textblock}

\item{\code{center}}{Boolean: enclose graphic within \code{center}
environment?}

\item{\code{inside_textblock}}{don't generate \code{textblock} environment,
just the \code{\\includegraphics} line (useful if, e.g., you write out the
environment \code{\\begin} and \code{\\end} yourself and stick the code chunk
between them)}

}

Grid positioning only happens if \code{inside_textblock=T} or
\code{textblock_width} is specified in the chunk positions; otherwise we
revert to knitr's normal behavior. Grid positioning also always makes
graphics inline rather than floating. Use \code{inside_textblock=T} and
enclose it in a \code{figure} environment yourself if you want to combine the
textblock and the figure environment (you probably don't).

N.B. the default knitr plot output hook for LaTeX responds to many more
options than this does. But in my workflow we are knitting to markdown, not
LaTeX. That's a simplifying decision in some ways but with some costs in
flexibility.
}
